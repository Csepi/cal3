{
  "panel": {
    "title": "ü§ñ Automation Rules",
    "newRule": "New Rule",
    "searchPlaceholder": "Search rules by name or description...",
    "all": "All",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "total": "Total:",
    "totalEnabled": "Enabled:",
    "totalDisabled": "Disabled:",
    "page": "Page {{page}} of {{totalPages}}",
    "previous": "Previous",
    "next": "Next",
    "loading": "Loading automation rules...",
    "noRules": "No Automation Rules Yet",
    "noRulesDesc": "Create your first automation rule to automatically manage your calendar events based on conditions and triggers.",
    "examples": "Examples: Color-code work meetings, send reminders before events, or organize imported calendar events."
  },
  "ruleCard": {
    "enabled": "Enabled",
    "disabled": "Disabled",
    "edit": "Edit",
    "delete": "Delete",
    "allConditions": "All conditions",
    "anyConditions": "Any conditions",
    "actionsConfigured": "Actions configured",
    "executions": "execution(s)",
    "lastRun": "Last run: {{time}}",
    "viewDetails": "View Details"
  },
  "modal": {
    "editRule": "Edit Automation Rule",
    "createRule": "Create Automation Rule",
    "basicInfo": "Basic Information",
    "ruleName": "Rule Name *",
    "ruleNamePlaceholder": "e.g., Color work meetings blue",
    "charCount": "{{count}}/{{max}} characters",
    "description": "Description",
    "descriptionPlaceholder": "Optional description of what this rule does",
    "enableImmediately": "Enable this rule immediately",
    "created": "Created: {{date}}",
    "requiredFields": "* Required fields",
    "cancel": "Cancel",
    "createRule": "Create Rule",
    "updateRule": "Update Rule",
    "saving": "Saving..."
  },
  "trigger": {
    "label": "When should this rule run? *",
    "selectPlaceholder": "Select a trigger...",
    "configuration": "Trigger Configuration",
    "eventCreated": "Event Created",
    "eventUpdated": "Event Updated",
    "eventDeleted": "Event Deleted",
    "eventStartsIn": "Event Starts In",
    "eventEndsIn": "Event Ends In",
    "calendarImported": "Calendar Imported",
    "scheduledTime": "Scheduled Time",
    "webhookIncoming": "Webhook Incoming",
    "minutesBefore": "Minutes before event starts",
    "minutesBeforeEnd": "Minutes before event ends",
    "minutes": "minutes",
    "rangeInfo": "Range: 1 minute to 7 days (10,080 minutes)",
    "commonValues": "Common values:",
    "5min": "5 min",
    "10min": "10 min",
    "15min": "15 min",
    "30min": "30 min",
    "1hour": "1 hour",
    "1day": "1 day",
    "cronExpression": "Cron Expression",
    "cronFormat": "Format: minute hour day month day-of-week",
    "commonPatterns": "Common patterns:",
    "pattern1": "Every day at 9:00 AM",
    "pattern2": "Weekdays at 9:00 AM",
    "pattern3": "First day of month at midnight",
    "pattern4": "Every 6 hours",
    "use": "Use",
    "autoTriggerInfo": "‚ÑπÔ∏è This trigger fires automatically when the event lifecycle action occurs. No additional configuration needed.",
    "importTriggerInfo": "‚ÑπÔ∏è This trigger fires automatically when events are synced from external calendars (Google Calendar, Outlook, etc.). No additional configuration needed."
  },
  "conditions": {
    "title": "Conditions",
    "match": "Match:",
    "allConditions": "All conditions (AND)",
    "anyCondition": "Any condition (OR)",
    "noConditionsInfo": "‚ÑπÔ∏è No conditions - the rule will trigger for all events matching the trigger.",
    "allMustBeTrue": "‚úì All conditions must be true for the rule to trigger actions.",
    "anyCanBeTrue": "‚úì At least one condition must be true for the rule to trigger actions.",
    "and": "AND",
    "or": "OR",
    "addCondition": "Add Condition",
    "maxConditionsWarning": "‚ö†Ô∏è Maximum of 10 conditions allowed. Please remove some conditions.",
    "tip": "Tip: Conditions are optional. If no conditions are specified, the rule will apply to all events that match the trigger. Add conditions to filter specific events.",
    "field": "Field",
    "selectField": "Select field...",
    "type": "Type: {{dataType}}",
    "operator": "Operator",
    "selectOperator": "Select operator...",
    "value": "Value",
    "selectFieldFirst": "Select a field first...",
    "webhookDataPlaceholder": "e.g., webhook.data.customer_id or webhook.data.order.status",
    "numberPlaceholder": "e.g., 60",
    "booleanPlaceholder": "true or false",
    "arrayPlaceholder": "Comma-separated values",
    "colorPlaceholder": "#3b82f6",
    "enterValue": "Enter value...",
    "durationHelp": "Duration in minutes",
    "webhookHelp": "üí° Use dot notation to access nested JSON fields (e.g., webhook.data.customer_id, webhook.data.metadata.priority)",
    "arrayHelp": "Separate multiple values with commas",
    "removeCondition": "Remove condition"
  },
  "actions": {
    "title": "Actions",
    "count": "{{count}} of {{max}} max",
    "info": "‚ö° Actions are executed in order when conditions are met. Drag to reorder.",
    "dragToReorder": "Drag to reorder",
    "addAction": "Add Action",
    "requiredWarning": "‚ö†Ô∏è At least one action is required.",
    "maxActionsWarning": "‚ö†Ô∏è Maximum of {{max}} actions reached. Remove an action to add more.",
    "tip": "Tip: Actions are executed sequentially. If one action fails, the remaining actions will still be attempted. Check the audit log to see execution results.",
    "comingSoon": "Additional actions coming soon:",
    "moveToCalendar": "Move to Calendar - Transfer events between calendars",
    "cancelEvent": "Cancel Event - Mark events as cancelled",
    "createTask": "Create Task - Generate related tasks",
    "sendEmail": "Send Email - Email notifications",
    "webhook": "Webhook - Trigger external integrations",
    "selectAction": "Select action...",
    "removeAction": "Remove action",
    "comingSoonWarning": "üöß Coming Soon: This action type is not yet implemented in the backend. The configuration form will be available in a future update.",
    "noActionSelected": "Select an action type above"
  },
  "actionTypes": {
    "setEventColor": "Set Event Color",
    "eventColorLabel": "Event Color *",
    "colorPlaceholder": "#3b82f6 or {{event.color}}",
    "preview": "Preview",
    "invalidColor": "Invalid hex color format or smart value",
    "smartValueInfo": "‚ú® Smart value will be replaced with actual data when the action executes",
    "presetColors": "Preset Colors",
    "howItWorks": "How it works: When this rule triggers, the event's color will be changed to the selected color (or smart value result). This applies to the event's visual appearance in the calendar.",
    "proTip": "üí° Pro Tip: Use smart values like {{calendar.color}} to dynamically set colors based on trigger data.",
    "sampleEvent": "Sample Event Title",
    "addEventTag": "Add Event Tag",
    "tagLabel": "Tag *",
    "tagPlaceholder": "e.g., important, work, personal",
    "tagHelp": "This tag will be added to matching events",
    "sendNotification": "Send Notification",
    "notificationTitle": "Title (optional)",
    "notificationTitlePlaceholder": "e.g., Reminder",
    "notificationMessage": "Message *",
    "notificationMessagePlaceholder": "e.g., Meeting starts in 30 minutes",
    "updateEventTitle": "Update Event Title",
    "newTitle": "New Title *",
    "newTitlePlaceholder": "e.g., [WORK] {{originalTitle}}",
    "titleHelp": "Use {{originalTitle}} to include the current title",
    "updateEventDescription": "Update Event Description",
    "newDescription": "New Description *",
    "newDescriptionPlaceholder": "Enter new description...",
    "mode": "Mode *",
    "replace": "Replace",
    "append": "Append",
    "prepend": "Prepend",
    "webhookUrl": "Webhook URL *",
    "webhookUrlPlaceholder": "https://example.com/webhook",
    "webhookUrlHelp": "The HTTP/HTTPS endpoint to call",
    "includeEventData": "Include Event Data",
    "includeEventDataHelp": "Send event details (title, time, description, etc.) in the webhook payload",
    "customHeaders": "Custom Headers (JSON, optional)",
    "customHeadersPlaceholder": "{\"Authorization\": \"Bearer token\"}",
    "customHeadersHelp": "Optional custom HTTP headers as JSON object"
  },
  "detail": {
    "backToList": "Back to list",
    "runNow": "Run Now",
    "runNowButton": "‚ñ∂Ô∏è Run Now",
    "edit": "‚úèÔ∏è Edit",
    "delete": "üóëÔ∏è Delete",
    "created": "Created:",
    "updated": "Updated:",
    "executions": "Executions:",
    "lastRun": "Last run:",
    "overviewTab": "Overview",
    "historyTab": "Execution History",
    "statusEnabled": "‚úì Enabled",
    "statusDisabled": "‚óã Disabled",
    "triggerSection": "üéØ Trigger",
    "triggerType": "Type:",
    "triggerConfig": "Configuration:",
    "conditionsSection": "‚úÖ Conditions ({{count}})",
    "conditionsLogicAll": "Logic: All must be true",
    "conditionsLogicAny": "Logic: Any can be true",
    "actionsSection": "‚ö° Actions ({{count}})",
    "viewConfiguration": "View configuration"
  },
  "auditLog": {
    "title": "Execution History",
    "stats": "{{total}} total executions ‚Ä¢ {{success}} successful ‚Ä¢ {{failed}} failed",
    "lastRun": "Last run: {{time}}",
    "refresh": "Refresh",
    "status": "Status",
    "allStatuses": "All Statuses",
    "success": "Success",
    "partialSuccess": "Partial Success",
    "failed": "Failed",
    "skipped": "Skipped",
    "dateRange": "Date Range",
    "last7days": "Last 7 days",
    "last30days": "Last 30 days",
    "last90days": "Last 90 days",
    "allTime": "All time",
    "columnDate": "Date/Time",
    "columnRule": "Rule",
    "columnEvent": "Event",
    "columnStatus": "Status",
    "columnDuration": "Duration",
    "columnActions": "Actions",
    "viewButton": "View ‚Üí",
    "eventDeleted": "Event deleted",
    "durationMs": "{{ms}}ms",
    "noHistory": "No Execution History",
    "noHistoryRuleDesc": "This rule has not been executed yet. Enable the rule and trigger events to see execution history.",
    "noHistoryGeneralDesc": "No automation rules have been executed yet. Create and enable rules to see execution history.",
    "showing": "Showing {{count}} execution(s)",
    "loading": "Loading execution history..."
  },
  "auditLogDetail": {
    "title": "Execution Details",
    "status": "Status",
    "executedAt": "Executed At",
    "duration": "Duration",
    "executedBy": "Executed By",
    "triggerSection": "üéØ Trigger",
    "triggerType": "Type:",
    "triggerEvent": "Event:",
    "viewTriggerContext": "View trigger context",
    "conditionsSection": "‚úÖ Conditions ({{passed}}/{{total}} passed)",
    "expected": "Expected:",
    "actual": "Actual:",
    "logic": "Logic:",
    "conditionsPassed": "‚úì All conditions passed - Actions were executed",
    "conditionsNotMet": "‚úó Conditions not met - Actions were skipped",
    "actionsSection": "‚ö° Actions ({{successful}}/{{total}} successful)",
    "viewActionData": "View action data",
    "error": "Error",
    "close": "Close",
    "loading": "Loading execution details..."
  },
  "retroactive": {
    "title": "Run Rule Now",
    "titleComplete": "Execution Complete",
    "confirmMessage": "Are you sure you want to run this rule on all existing events?",
    "ruleDetails": "Rule Details:",
    "name": "Name:",
    "description": "Description:",
    "trigger": "Trigger:",
    "conditions": "Conditions:",
    "actions": "Actions:",
    "importantTitle": "Important:",
    "warning1": "This will evaluate all your existing events",
    "warning2": "Matching events will have the rule's actions applied",
    "warning3": "This operation cannot be undone",
    "warning4": "Large event sets may take some time to process",
    "executing": "Executing rule on your events...",
    "executingSubtext": "This may take a moment",
    "processed": "Processed {{count}} event(s)",
    "failed": "Execution Failed",
    "cancel": "Cancel",
    "runNow": "Run Now",
    "close": "Close"
  },
  "deleteRule": {
    "title": "Delete Automation Rule",
    "confirmMessage": "Are you sure you want to delete this automation rule? This action cannot be undone.",
    "ruleDetails": "Rule Details:",
    "name": "Name:",
    "description": "Description:",
    "status": "Status:",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "executions": "Executions:",
    "warningTitle": "Warning:",
    "warning1": "This rule will be permanently deleted",
    "warning2": "All execution history ({{count}} logs) will be deleted",
    "warning3": "Future events will not trigger this automation",
    "warning4": "This action cannot be undone",
    "deletionFailed": "Deletion Failed",
    "cancel": "Cancel",
    "deleteButton": "Delete Rule",
    "deleting": "Deleting..."
  },
  "webhook": {
    "title": "üåê Webhook Configuration",
    "unsavedMessage": "Save this rule to generate a webhook URL.",
    "unsavedDescription": "Once saved, you'll receive a unique webhook URL that external systems can use to trigger this automation.",
    "webhookUrl": "Webhook URL",
    "copy": "Copy",
    "copied": "Copied!",
    "regenerateToken": "Regenerate Token",
    "regenerating": "Regenerating...",
    "regenerateWarning": "Warning: Regenerating will invalidate the current webhook URL",
    "regenerateConfirm": "Are you sure you want to regenerate the webhook token? The old URL will stop working.",
    "regenerateFailed": "Failed to regenerate token. Please try again.",
    "howToUseTitle": "How to Use",
    "step1": "Copy the webhook URL above",
    "step2": "Configure your external system to send POST requests to this URL",
    "step3": "Send JSON data in the request body",
    "step4": "Use conditions to check webhook data fields (e.g., webhook.data.status)",
    "step5": "Define actions to execute when conditions match",
    "examplePayload": "Example Payload",
    "copyExample": "Copy Example",
    "exampleCopied": "Payload example copied to clipboard!",
    "fieldAccess": "Access fields using dot notation: webhook.data.customer_id, webhook.data.metadata.priority",
    "smartValuesTitle": "üí° Using Smart Values",
    "smartValuesDesc": "Webhook data is automatically available as smart values in conditions. Select \"Webhook Data\" as the condition field, then specify the JSON path in the value (e.g., webhook.data.customer_id)."
  },
  "smartValues": {
    "button": "‚ú® Insert Smart Value",
    "title": "Smart Values",
    "searchPlaceholder": "Search smart values...",
    "loading": "Loading smart values...",
    "noResults": "No smart values found",
    "footer": "üí° Smart values are replaced with actual data when the action executes"
  }
}
