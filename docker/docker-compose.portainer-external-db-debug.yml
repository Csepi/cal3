version: '3.9'

# ===========================================
# DEBUG VERSION - Portainer External Database
# ===========================================
# This version has:
# - Longer health check timeouts
# - No dependencies (so you can see individual errors)
# - Debug logging enabled

services:
  # Backend API (NestJS) - Standalone for debugging
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
      args:
        NODE_ENV: production
    container_name: cal3-backend
    restart: "no"  # Don't restart on failure - easier to debug
    environment:
      NODE_ENV: production
      
      # Smart port/URL configuration
      BASE_URL: ${BASE_URL:-http://localhost}
      PORT: ${BACKEND_PORT:-8081}
      BACKEND_PORT: ${BACKEND_PORT:-8081}
      FRONTEND_PORT: ${FRONTEND_PORT:-8080}
      
      # External Database Configuration
      DB_TYPE: postgres
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME:-cal3}
      
      # SSL Settings
      DB_SSL: ${DB_SSL:-true}
      DB_SSL_REJECT_UNAUTHORIZED: ${DB_SSL_REJECT_UNAUTHORIZED:-false}
      
      # DEBUG: Enable logging to see errors
      DB_SYNCHRONIZE: ${DB_SYNCHRONIZE:-false}
      DB_LOGGING: "true"  # ALWAYS ON for debugging
      
      # Connection Pool
      DB_POOL_MAX: ${DB_POOL_MAX:-10}
      DB_POOL_MIN: ${DB_POOL_MIN:-2}
      DB_IDLE_TIMEOUT: ${DB_IDLE_TIMEOUT:-30000}
      DB_CONNECTION_TIMEOUT: ${DB_CONNECTION_TIMEOUT:-15000}
      
      # Security
      JWT_SECRET: ${JWT_SECRET}
      
      # OAuth (Optional)
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      MICROSOFT_CLIENT_ID: ${MICROSOFT_CLIENT_ID}
      MICROSOFT_CLIENT_SECRET: ${MICROSOFT_CLIENT_SECRET}
      MICROSOFT_TENANT_ID: ${MICROSOFT_TENANT_ID:-common}
    ports:
      - "${BACKEND_PORT:-8081}:${BACKEND_PORT:-8081}"
    networks:
      - cal3-network
    healthcheck:
      test: ["CMD", "sh", "-c", "node -e \"require('http').get('http://localhost:' + (process.env.BACKEND_PORT || '8081') + '/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})\""]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 120s  # Give it 2 minutes to connect to Azure DB
    deploy:
      resources:
        limits:
          memory: 1G

  # Frontend - Will start regardless of backend health
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend
      args:
        BASE_URL: ${BASE_URL:-http://localhost}
        BACKEND_PORT: ${BACKEND_PORT:-8081}
    container_name: cal3-frontend
    restart: "no"
    environment:
      BASE_URL: ${BASE_URL:-http://localhost}
      BACKEND_PORT: ${BACKEND_PORT:-8081}
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    networks:
      - cal3-network
    # NO depends_on - runs independently for debugging
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  cal3-network:
    driver: bridge
